{"version":3,"sources":["components/QuestionCard.js","components/QuestionModal.js","App.js","index.js"],"names":["QuestionCard","questionId","userName","userImage","questionTitle","questionTags","onInfoClicked","Card","className","Row","Col","md","Img","src","variant","alt","style","height","width","Body","Title","Text","join","Button","onClick","QuestionModal","handleClose","isAnswered","questionUrl","showModal","Modal","show","onHide","Header","closeButton","Footer","href","target","App","useState","questions","setQuestions","question","setQuestion","setShowModal","useEffect","a","fetch","response","json","data","items","getQuestions","handleInfoClicked","ques","find","question_id","Container","title","owner","display_name","is_answered","link","map","key","profile_image","tags","ReactDOM","render","document","getElementById"],"mappings":"+RAyCeA,EAtCM,SAAC,GAOf,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,SACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cAEA,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,gBACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,QACN,kBAACJ,EAAA,EAAKK,IAAN,CACEC,IAAKV,EACLW,QAAQ,MACRC,IAAKb,EACLc,MAAO,CACLC,OAAQ,QACRC,MAAO,YAIb,kBAACR,EAAA,EAAD,KACE,kBAACH,EAAA,EAAKY,KAAN,KACE,kBAACZ,EAAA,EAAKa,MAAN,KAAahB,GAEb,kBAACG,EAAA,EAAKc,KAAN,KAAYhB,EAAaiB,KAAK,OAE9B,kBAACC,EAAA,EAAD,CAAQT,QAAQ,UAAUU,QAAS,kBAAMlB,EAAcL,KAAvD,kB,QCIGwB,EAhCO,SAAC,GAOhB,IANLC,EAMI,EANJA,YACAtB,EAKI,EALJA,cACAF,EAII,EAJJA,SACAyB,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,UAEA,OACE,kBAACC,EAAA,EAAD,CAAOC,KAAMF,EAAWG,OAAQN,GAC9B,kBAACI,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMV,MAAP,KAAchB,IAEhB,kBAAC0B,EAAA,EAAMX,KAAP,iCACwBjB,GACtB,6BAFF,sBAGmByB,EAAqB,GAAR,MAHhC,aAKA,kBAACG,EAAA,EAAMK,OAAP,KACE,kBAACZ,EAAA,EAAD,CAAQT,QAAQ,UAAUU,QAASE,GAAnC,SAGA,kBAACH,EAAA,EAAD,CAAQT,QAAQ,aACd,uBAAGsB,KAAMR,EAAaS,OAAO,UAA7B,2BC0CKC,EA5DH,WAAM,MAEkBC,mBAAS,IAF3B,mBAETC,EAFS,KAEEC,EAFF,OAKgBF,mBAAS,IALzB,mBAKTG,EALS,KAKCC,EALD,OAQkBJ,oBAAS,GAR3B,mBAQTV,EARS,KAQEe,EARF,KAWhBC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,sEACIC,MAf3B,sFAcuB,cACbC,EADa,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGnBT,EAAaS,EAAKC,OAHC,2CAAH,qDAMlBC,KACC,IAGH,IAAMC,EAAoB,SAACpD,GACzB,IAAMqD,EAAOd,EAAUe,MACrB,SAACb,GAAD,OAAcA,EAASc,cAAgBvD,KAEzC0C,EAAYW,GACZV,GAAa,IAGf,OACE,kBAACa,EAAA,EAAD,CAAWjD,UAAU,8BAElBqB,GACC,kBAAC,EAAD,CACEA,UAAWA,EACXH,YAAa,kBAAMkB,GAAa,IAChCxC,cAAesC,EAASgB,MACxBxD,SAAUwC,EAASiB,MAAMC,aACzBjC,WAAYe,EAASmB,YACrBjC,YAAac,EAASoB,OAKzBtB,EAAUuB,KAAI,SAACrB,GAAD,OACb,kBAAC,EAAD,CACEsB,IAAKtB,EAASc,YACdvD,WAAYyC,EAASc,YACrBtD,SAAUwC,EAASiB,MAAMC,aACzBzD,UAAWuC,EAASiB,MAAMM,cAC1B7D,cAAesC,EAASgB,MACxBrD,aAAcqC,EAASwB,KACvB5D,cAAe+C,S,MCxDzBc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bc6d7362.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst QuestionCard = ({\r\n  questionId,\r\n  userName,\r\n  userImage,\r\n  questionTitle,\r\n  questionTags,\r\n  onInfoClicked,\r\n}) => {\r\n  return (\r\n    <Card className=\"my-3 rounded\">\r\n      <Row>\r\n        <Col md=\"auto\">\r\n          <Card.Img\r\n            src={userImage}\r\n            variant=\"top\"\r\n            alt={userName}\r\n            style={{\r\n              height: \"180px\",\r\n              width: \"180px\",\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Card.Body>\r\n            <Card.Title>{questionTitle}</Card.Title>\r\n\r\n            <Card.Text>{questionTags.join(\", \")}</Card.Text>\r\n\r\n            <Button variant=\"primary\" onClick={() => onInfoClicked(questionId)}>\r\n              Know more\r\n            </Button>\r\n          </Card.Body>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst QuestionModal = ({\r\n  handleClose,\r\n  questionTitle,\r\n  userName,\r\n  isAnswered,\r\n  questionUrl,\r\n  showModal,\r\n}) => {\r\n  return (\r\n    <Modal show={showModal} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{questionTitle}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {`Question asked By ${userName}`}\r\n        <br />\r\n        {`Question is ${!isAnswered ? \"not\" : \"\"} answerd`}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"secondary\">\r\n          <a href={questionUrl} target=\"_blank\">\r\n            Go to Stackoverflow\r\n          </a>\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuestionModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport QuestionCard from \"./components/QuestionCard\";\r\nimport QuestionModal from \"./components/QuestionModal\";\r\n\r\nconst API_URL =\r\n  \"https://api.stackexchange.com/2.2/questions?order=desc&sort=hot&site=stackoverflow\";\r\n\r\nconst App = () => {\r\n  // All questions from API\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  // selected question from 'Know more'\r\n  const [question, setQuestion] = useState({});\r\n\r\n  // modal show/hide\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // fetches data\r\n  useEffect(() => {\r\n    const getQuestions = async () => {\r\n      const response = await fetch(API_URL);\r\n      const data = await response.json();\r\n      setQuestions(data.items);\r\n    };\r\n\r\n    getQuestions();\r\n  }, []);\r\n\r\n  // handler for 'know more' btn click\r\n  const handleInfoClicked = (questionId) => {\r\n    const ques = questions.find(\r\n      (question) => question.question_id === questionId\r\n    );\r\n    setQuestion(ques);\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <Container className=\" justify-content-md-center\">\r\n      {/* modal */}\r\n      {showModal && (\r\n        <QuestionModal\r\n          showModal={showModal}\r\n          handleClose={() => setShowModal(false)}\r\n          questionTitle={question.title}\r\n          userName={question.owner.display_name}\r\n          isAnswered={question.is_answered}\r\n          questionUrl={question.link}\r\n        />\r\n      )}\r\n\r\n      {/* All questions */}\r\n      {questions.map((question) => (\r\n        <QuestionCard\r\n          key={question.question_id}\r\n          questionId={question.question_id}\r\n          userName={question.owner.display_name}\r\n          userImage={question.owner.profile_image}\r\n          questionTitle={question.title}\r\n          questionTags={question.tags}\r\n          onInfoClicked={handleInfoClicked}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}